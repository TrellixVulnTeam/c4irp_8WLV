.PHONY: clean libchirp libuv

COMMON         := config.h src/common.h

MYCFLAGS  := -std=gnu99 -O3 -DNDEBUG -fPIC -Wall -Werror -Wno-unused-function -Ilibuv/include
ifneq ($(OS),Windows_NT)
	MYCFLAGS += -fPIC
endif

SRCS=$(filter-out $(wildcard src/*_test.c),$(wildcard src/*.c))
OBJS=$(SRCS:.c=.o)

all: libchirp

config.h: | config.defs.h
	cp config.defs.h config.h

libuv/configure:
ifeq ($(OS),Windows_NT)
	echo Not needed on windows
else
	cd libuv && ./autogen.sh
endif

libuv/Makefile: libuv/configure
ifeq ($(OS),Windows_NT)
	echo Not needed on windows
else
	cd libuv && CFLAGS="$(MYCFLAGS)" ./configure
endif

libuv/.libs/libuv.a: libuv/Makefile
ifeq ($(OS),Windows_NT)
	make -f Makefile.mingw -C libuv
else
	CFLAGS="$(MYCFLAGS)" make -C libuv
endif
	strip --strip-debug $@

libuv: libuv/.libs/libuv.a

libchirp: libchirp.a

libchirp.a: $(OBJS) | libchirp-depends
	ar $(ARFLAGS) $@ $^
	strip --strip-debug $^

libchirp-depends: | libuv

clean:
	git clean -xdf
	cd libuv && git clean -xdf

%.c: %.h

%.o: %.c $(COMMON)
	$(CC) -c -o $@ $< $(MYCFLAGS)

